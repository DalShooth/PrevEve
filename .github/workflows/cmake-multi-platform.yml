name: Build and Release PrevEve

on:
  push:
    branches:
      - master
    tags:
      - 'v*.*.*' # Trigger releases for tags like v1.0.0
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Required for creating releases and uploading assets

    steps:
    # Checkout the repository code
    - name: Checkout code
      uses: actions/checkout@v4

    # Cache apt packages to speed up dependency installation
    - name: Cache apt packages
      uses: actions/cache@v4
      with:
        path: /var/cache/apt
        key: ${{ runner.os }}-apt-${{ hashFiles('**/CMakeLists.txt') }}
        restore-keys: |
          ${{ runner.os }}-apt-

    # Install dependencies
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          cmake \
          make \
          qt6-base-dev \
          libgstreamer1.0-dev \
          libgstreamer-plugins-base1.0-dev \
          libpipewire-0.3-dev

    # Configure the project with CMake in a build directory
    - name: Configure CMake
      run: |
        mkdir -p build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_RUNTIME_OUTPUT_DIRECTORY=$PWD/bin

    # Build the project with Make
    - name: Build
      run: |
        cd build
        make -j$(nproc)

    # Verify the executable
    - name: Check executable
      run: |
        ls -l build/bin/PrevEve || { echo "Error: PrevEve not found"; exit 1; }
        chmod +x build/bin/PrevEve

    # Upload executable as an artifact (for all builds)
    - name: Upload Executable Artifact
      uses: actions/upload-artifact@v4
      with:
        name: PrevEve-executable
        path: build/bin/PrevEve
        retention-days: 5

    # Create a release and upload the executable (only for tagged pushes)
    - name: Debug Release Context
      if: startsWith(github.ref, 'refs/tags/v')
      run: |
        echo "GITHUB_REF: $GITHUB_REF"
        echo "Tag: ${{ github.ref_name }}"
        ls -l build/bin/PrevEve || { echo "Error: PrevEve not found for release"; exit 1; }

    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v2
      with:
        files: build/bin/PrevEve
        name: Release ${{ github.ref_name }}
        tag_name: ${{ github.ref_name }}
        draft: false
        prerelease: false
        fail_on_unmatched_files: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
